
before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - mkdir -p ~/.ssh
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - eval "$(ssh-agent -s)"
  - ssh-add ~/.ssh/id_rsa
  - ssh-keyscan -H 'gitlab.com' >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

stages:
  - staging_build
  - staging_deploy
  - production

Build Staging:
  only:
      - staging
  image: node:8.11.3
  stage: staging_build
  environment: staging
  before_script:
      - npm -g install npm --silent
      - npm set progress=false
  script:
    - npm install npm-install-peers --silent --save
    - REACT_APP_STAGE=staging CI=true npm run build

Deploy Staging:
  only:
      - staging
  image: php:7.1-fpm
  stage: staging_deploy
  environment: staging
  variables:
    S3_BUCKET_NAME: "bucket-clipr-code"
  before_script:
      - apt-get -y update
      - apt-get -y install zip unzip awscli libpng-dev curl
  script:
    - zip -r front-staging.zip ./build
    - aws s3 cp front-staging.zip s3://$S3_BUCKET_NAME

Deploy Production:
  stage: production
  only:
    - master
  script:
    - ssh $SERVER_USER@$SERVER_HOSTNAME 'eval `ssh-agent -s`
            && ssh-add -k ~/.ssh/id_rsa_gitlab
            && cd /var/www/my/prod
            && git reset --hard
            && git pull origin master
            && REACT_APP_STAGE=production CI=true npm run build
            && rm -rf public
            && mv build public
            && rm .gitlab-ci.yml'

